# Generated by Django 5.2.4 on 2025-08-09 10:51

from django.db import migrations
from django.contrib.auth import get_user_model


def create_default_superuser(apps, schema_editor):
    """Create default superuser for deployment."""
    User = get_user_model()
    
    # Check if superuser already exists
    if not User.objects.filter(is_superuser=True).exists():
        User.objects.create_user(
            username='admin',
            email='admin@greencart.com',
            password='admin123',
            is_staff=True,
            is_superuser=True,
            is_active=True,
            first_name='Admin',
            last_name='GreenCart'
        )
        print("✅ Default superuser created: admin / admin123")
    else:
        print("ℹ️ Superuser already exists, skipping creation")


def reverse_create_default_superuser(apps, schema_editor):
    """Remove default superuser."""
    User = get_user_model()
    
    try:
        user = User.objects.get(username='admin', email='admin@greencart.com')
        user.delete()
        print("✅ Default superuser removed")
    except User.DoesNotExist:
        print("ℹ️ Default superuser not found, nothing to remove")


class Migration(migrations.Migration):
    dependencies = [
        ("accounts", "0002_user_user_type_producer"),
    ]

    operations = [
        migrations.RunPython(
            create_default_superuser,
            reverse_create_default_superuser
        ),
    ]
