# Generated by Django 5.2.4 on 2025-08-09 02:50

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accounts", "0002_user_user_type_producer"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nom de la catégorie"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=100, unique=True, verbose_name="Slug"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description de la catégorie de produits",
                        verbose_name="Description",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Emoji ou classe d'icône pour l'affichage",
                        max_length=10,
                        verbose_name="Icône",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Catégorie",
                "verbose_name_plural": "Catégories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nom du produit (ex: Tomates cerises bio)",
                        max_length=200,
                        verbose_name="Nom du produit",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Description détaillée du produit, méthodes de culture, etc.",
                        verbose_name="Description",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Prix unitaire en euros",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                        verbose_name="Prix",
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("kg", "Kilogramme"),
                            ("g", "Gramme"),
                            ("piece", "Pièce"),
                            ("litre", "Litre"),
                            ("ml", "Millilitre"),
                            ("bunch", "Bouquet"),
                            ("box", "Boîte"),
                            ("bag", "Sac"),
                        ],
                        default="kg",
                        help_text="Unité de vente du produit",
                        max_length=10,
                        verbose_name="Unité",
                    ),
                ),
                (
                    "quantity_available",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Quantité actuellement en stock",
                        verbose_name="Quantité disponible",
                    ),
                ),
                (
                    "expiry_date",
                    models.DateField(
                        blank=True,
                        help_text="DLC du produit (optionnel pour les produits non périssables)",
                        null=True,
                        verbose_name="Date limite de consommation",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Photo principale du produit",
                        null=True,
                        upload_to="products/%Y/%m/%d/",
                        verbose_name="Photo du produit",
                    ),
                ),
                (
                    "is_organic",
                    models.BooleanField(
                        default=False,
                        help_text="Produit issu de l'agriculture biologique",
                        verbose_name="Produit bio",
                    ),
                ),
                (
                    "is_local",
                    models.BooleanField(
                        default=True,
                        help_text="Produit cultivé localement (moins de 50km)",
                        verbose_name="Produit local",
                    ),
                ),
                (
                    "harvest_date",
                    models.DateField(
                        blank=True,
                        help_text="Date de récolte du produit",
                        null=True,
                        verbose_name="Date de récolte",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Le produit est-il disponible à la vente ?",
                        verbose_name="Actif",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="products.category",
                        verbose_name="Catégorie",
                    ),
                ),
                (
                    "producer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="accounts.producer",
                        verbose_name="Producteur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Produit",
                "verbose_name_plural": "Produits",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        help_text="Image supplémentaire du produit",
                        upload_to="products/gallery/%Y/%m/%d/",
                        verbose_name="Image",
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True,
                        help_text="Description de l'image pour l'accessibilité",
                        max_length=200,
                        verbose_name="Texte alternatif",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Ordre d'affichage de l'image",
                        verbose_name="Ordre",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="products.product",
                        verbose_name="Produit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Image produit",
                "verbose_name_plural": "Images produits",
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["category", "is_active"], name="products_pr_categor_50f5f1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["producer", "is_active"], name="products_pr_produce_b33dd8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_active", "expiry_date"],
                name="products_pr_is_acti_75eec7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_organic"], name="products_pr_is_orga_97130f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["price"], name="products_pr_price_9b1a5f_idx"),
        ),
    ]
