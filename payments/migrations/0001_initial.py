# Generated by Django 5.2.4 on 2025-08-17 16:04

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("orders", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "stripe_payment_intent_id",
                    models.CharField(
                        help_text="ID du PaymentIntent Stripe",
                        max_length=255,
                        unique=True,
                        verbose_name="Stripe Payment Intent ID",
                    ),
                ),
                (
                    "stripe_client_secret",
                    models.CharField(
                        blank=True,
                        help_text="Client secret pour confirmer le paiement côté client",
                        max_length=255,
                        verbose_name="Stripe Client Secret",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Montant du paiement en euros",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                        verbose_name="Montant",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="EUR",
                        help_text="Code devise ISO (EUR, USD, etc.)",
                        max_length=3,
                        verbose_name="Devise",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "En attente"),
                            ("PROCESSING", "En cours de traitement"),
                            ("SUCCEEDED", "Réussi"),
                            ("FAILED", "Échoué"),
                            ("CANCELLED", "Annulé"),
                            ("REFUNDED", "Remboursé"),
                            ("PARTIALLY_REFUNDED", "Partiellement remboursé"),
                        ],
                        default="PENDING",
                        help_text="Statut actuel du paiement",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CARD", "Carte bancaire"),
                            ("SEPA_DEBIT", "Prélèvement SEPA"),
                            ("BANCONTACT", "Bancontact"),
                            ("IDEAL", "iDEAL"),
                            ("SOFORT", "Sofort"),
                        ],
                        help_text="Méthode de paiement utilisée",
                        max_length=20,
                        verbose_name="Méthode de paiement",
                    ),
                ),
                (
                    "stripe_fee",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Frais prélevés par Stripe",
                        max_digits=10,
                        null=True,
                        verbose_name="Frais Stripe",
                    ),
                ),
                (
                    "net_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Montant net après déduction des frais",
                        max_digits=10,
                        null=True,
                        verbose_name="Montant net",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date et heure de traitement du paiement",
                        null=True,
                        verbose_name="Traité le",
                    ),
                ),
                (
                    "failure_reason",
                    models.TextField(
                        blank=True,
                        help_text="Raison de l'échec du paiement si applicable",
                        verbose_name="Raison de l'échec",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Métadonnées additionnelles du paiement",
                        verbose_name="Métadonnées",
                    ),
                ),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment",
                        to="orders.order",
                        verbose_name="Commande",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Paiement",
                "verbose_name_plural": "Paiements",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Refund",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "stripe_refund_id",
                    models.CharField(
                        help_text="ID du remboursement Stripe",
                        max_length=255,
                        unique=True,
                        verbose_name="Stripe Refund ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Montant du remboursement en euros",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                        verbose_name="Montant remboursé",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="EUR",
                        help_text="Code devise ISO (EUR, USD, etc.)",
                        max_length=3,
                        verbose_name="Devise",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "En attente"),
                            ("SUCCEEDED", "Réussi"),
                            ("FAILED", "Échoué"),
                            ("CANCELLED", "Annulé"),
                        ],
                        default="PENDING",
                        help_text="Statut actuel du remboursement",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        choices=[
                            ("REQUESTED_BY_CUSTOMER", "Demandé par le client"),
                            ("DUPLICATE", "Paiement en double"),
                            ("FRAUDULENT", "Frauduleux"),
                            ("SUBSCRIPTION_CANCELED", "Abonnement annulé"),
                            ("PRODUCT_UNACCEPTABLE", "Produit non acceptable"),
                            ("PRODUCT_NOT_RECEIVED", "Produit non reçu"),
                            ("UNRECOGNIZED", "Non reconnu"),
                            ("CREDIT_NOT_PROCESSED", "Crédit non traité"),
                            ("GENERAL", "Raison générale"),
                            (
                                "INCORRECT_ACCOUNT_DETAILS",
                                "Détails de compte incorrects",
                            ),
                            ("INSUFFICIENT_FUNDS", "Fonds insuffisants"),
                            ("PRODUCT_NOT_RECEIVED", "Produit non reçu"),
                            ("PRODUCT_UNACCEPTABLE", "Produit non acceptable"),
                            ("SUBSCRIPTION_CANCELED", "Abonnement annulé"),
                            ("UNRECOGNIZED", "Non reconnu"),
                        ],
                        default="REQUESTED_BY_CUSTOMER",
                        help_text="Raison du remboursement",
                        max_length=50,
                        verbose_name="Raison",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description détaillée du remboursement",
                        verbose_name="Description",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date et heure de traitement du remboursement",
                        null=True,
                        verbose_name="Traité le",
                    ),
                ),
                (
                    "failure_reason",
                    models.TextField(
                        blank=True,
                        help_text="Raison de l'échec du remboursement si applicable",
                        verbose_name="Raison de l'échec",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Métadonnées additionnelles du remboursement",
                        verbose_name="Métadonnées",
                    ),
                ),
                (
                    "payment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="refunds",
                        to="payments.payment",
                        verbose_name="Paiement",
                    ),
                ),
            ],
            options={
                "verbose_name": "Remboursement",
                "verbose_name_plural": "Remboursements",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WebhookEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "stripe_event_id",
                    models.CharField(
                        help_text="ID unique de l'événement Stripe",
                        max_length=255,
                        unique=True,
                        verbose_name="Stripe Event ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        help_text="Type d'événement Stripe (ex: payment_intent.succeeded)",
                        max_length=100,
                        verbose_name="Type d'événement",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("RECEIVED", "Reçu"),
                            ("PROCESSED", "Traité"),
                            ("FAILED", "Échoué"),
                            ("IGNORED", "Ignoré"),
                        ],
                        default="RECEIVED",
                        help_text="Statut de traitement de l'événement",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        help_text="Données complètes de l'événement Stripe",
                        verbose_name="Données",
                    ),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date et heure de traitement de l'événement",
                        null=True,
                        verbose_name="Traité le",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Message d'erreur si le traitement a échoué",
                        verbose_name="Message d'erreur",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Événement Webhook",
                "verbose_name_plural": "Événements Webhook",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["stripe_event_id"],
                        name="payments_we_stripe__a54e78_idx",
                    ),
                    models.Index(
                        fields=["event_type"], name="payments_we_event_t_9f7fa1_idx"
                    ),
                    models.Index(
                        fields=["status"], name="payments_we_status_c05bf1_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="payments_we_created_ef8db8_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["stripe_payment_intent_id"],
                name="payments_pa_stripe__6fe52c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(fields=["status"], name="payments_pa_status_7ad4af_idx"),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["user", "-created_at"], name="payments_pa_user_id_7a85fd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["created_at"], name="payments_pa_created_b8a300_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="refund",
            index=models.Index(
                fields=["stripe_refund_id"], name="payments_re_stripe__bc040b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="refund",
            index=models.Index(
                fields=["payment", "-created_at"], name="payments_re_payment_b8f2d9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="refund",
            index=models.Index(fields=["status"], name="payments_re_status_715c3a_idx"),
        ),
    ]
